

- name: python | install app python and system dependencies
  apt: name={{item}} state=present
  with_items:
    - python
    - python-dev
    - python3
    - python3-dev
    - python-software-properties
    - python-pip
    - python3-pip
    - python3-virtualenv
    - python-virtualenv
    - virtualenvwrapper
    - build-essential
    - libavcodec-dev
    - libavdevice-dev
    - libavformat-dev
    - libavresample-dev
    - libavutil-dev
    - libbz2-dev
    - libffi-dev
    - libghc-text-icu-dev
    - libjpeg-dev
    - libncurses5-dev
    - libreadline-dev
    - libsqlite3-dev
    - libssl-dev
    - libswscale-dev
    - libxml2
    - libxml2-dev
    - libxslt1-dev
    - zlib1g-dev
    - llvm
    - node-less
    - git
    - mercurial
    - curl
    - wget
    - redis-server
    - pkg-config

- name: app | create envdir
  file: path=/app/envdir state=directory
  become_user: app


- name: app | create envdir
  copy: content="{{key}}" dest=/app/envdir/SECRET_KEY
  become_user: app

- name: app | create envdir
  copy: content="postgresql://{{PROJECT_NAME}}:{{password}}@localhost:5432/{{PROJECT_NAME}}" dest=/app/envdir/DATABASE_URL
  become_user: app

- name: app | get source via git
  git: repo={{PROJECT_URL}} dest=/app/src version={{GIT_VERSION|default('master')}} force=yes update=yes editable=True
  become_user: app

- name: app | create virtualenv
  command: /usr/bin/pyvenv /app/venv
  become_user: app

- name: app | upgrade pip and wheel
  pip: name={{item.name}} state=latest executable=/app/venv/bin/pip
  become_user: app

  with_items:
    - { name: 'pip'}
    - { name: 'wheel'}
    - { name: 'setuptools'}
    - { name: 'envdir' }

- name: app | install project requirements
  pip:
    requirements: /app/src/requirements.txt
    chdir: /app/
    executable: /app/venv/bin/pip
  become_user: app

- name: app | install src
  pip: chdir='/app/src/' editable=True name='.' executable=/app/venv/bin/pip
  become_user: app

- name: apps | collectstatic
  shell: '/app/venv/bin/manage.py collectstatic --noinput'
  become_user: app
  environment:
    SECRET_KEY: '{{key}}'
    DATABASE_URL: 'postgresql://{{PROJECT_NAME}}:{{password}}@localhost:5432/{{PROJECT_NAME}}'

- name: apps | db migrate
  shell: '/app/venv/bin/manage.py migrate --noinput'
  become_user: app
  environment:
    SECRET_KEY: '{{key}}'
    DATABASE_URL: 'postgresql://{{PROJECT_NAME}}:{{password}}@localhost:5432/{{PROJECT_NAME}}'

- name: app | copy project-specific ini file for uWSGI
  template: src=templates/uwsgi.ini.j2  dest=/etc/uwsgi-emperor/vassals/{{PROJECT_NAME}}.ini

- name: app | reload uwsgi app
  file:
    path: /tmp/app.reload
    state: touch
